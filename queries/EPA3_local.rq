BASE <http://instans.org/>
PREFIX : <http:instans.org/default#>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX ssn: <http://purl.oclc.org/NET/ssnx/ssn#>
PREFIX ep: <http://www.ontologydesignpatterns.org/cp/owl/eventprocessing.owl#>
PREFIX omgeo: <http://www.ontotext.com/owlim/geo#>
PREFIX ff: <http://factforge.net/>

# Enrich (EPA 3): Enrich events with the name of the closest location

# @name EPA3-Enrich
CONSTRUCT { GRAPH ?newgraph { 
    ?event :locationName ?label .
    ?s ?p ?o } }
WHERE { GRAPH ?g { 
    FILTER ( strStarts(str(?g),concat(str(<>),"Input-Eve")) )
    ?s ?p ?o .
    ?event a ep:EventObject ;
           geo:Point [ geo:lat ?lat; geo:long ?long ] .
    BIND ( "Espoo" as ?label ) # Local alternative to using the federated query
    # SERVICE <http://factforge.net/sparql> { # Retrieve location label
    #    ?location omgeo:nearby(?lat ?long "1km"); 
    #              ff:preferredLabel ?label }
  BIND (IRI(concat("Translated-",strAfter(str(?event),str(<>)))) AS ?newgraph) } } ;

# @name Cleanup-Translated
DELETE { GRAPH ?g1 { ?s ?p ?o } }
WHERE { GRAPH ?g1 {
    FILTER ( strStarts(str(?g1),"Translated-Eve") )
    ?event1 ep:hasEventObjectSamplingTime ?time1 .
    ?s ?p ?o }
  FILTER EXISTS { GRAPH ?g2 {
    FILTER ( strStarts(str(?g2),"Translated-Eve") )
    ?event2 ep:hasEventObjectSamplingTime ?time2 .
      FILTER (?time1 < ?time2)
  }  }
} ;
